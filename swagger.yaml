openapi: 3.0.0
info:
  title: AiEnglishLearner API
  version: 1.0.0
  description: API for the backend of ai english learner
  
servers:
  - url: https://api.example.com/v1
    description: Main API server

components:
  securitySchemes:
    GoogleOAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/v2/auth
          tokenUrl: https://oauth2.googleapis.com/token
          scopes:
            profile: Access to user profile
            email: Access to user email
    AppleOAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://appleid.apple.com/auth/authorize
          tokenUrl: https://appleid.apple.com/auth/token
          scopes:
            name: Access to user name
            email: Access to user email

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user
        email:
          type: string
          format: email
          description: User's email address
        username:
          type: string
          description: User's username
        nativeLanguage:
          type: string
          description: User's native language (It should be first selected from ip address then user can change it).
        avatarUrl:
          type: string
          format: uri
          description: URL to user's avatar image.
        ageRange:
          type: object
          properties:
            min:
              type: integer
            max:
              type: integer
          required:
            - min
            - max
          description: Age range where age is from min to max, inclusive.
        declaredLevel:
          type: string
          enum: [Beginner, Elementary, Intermediate, Upper-Intermediate, Advanced, Proficient]
          description: The level which user thinks of itself.
        testedLevel:
          type: string
          enum: [Beginner, Elementary, Intermediate, Upper-Intermediate, Advanced, Proficient]
          description: The level which we have found out of user from the initial tests.
        target:
          type: string
          enum: [Beginner, Elementary, Intermediate, Upper-Intermediate, Advanced, Proficient]
          description: The level which user wants to reach.
        motivations: 
          type: array
          items:
            type: string
            enum: ["Personal Challenge", "Immigration", "Travel", "Business", "Academy", "Movies"]
          minItems: 1
          maxItems: 3
          description: "Why does user want to learn"
          example: ["Travel", "Immigration"]
        learningStyle: 
          type: array
          items:
            type: string
            enum: ["Text", "Images", "Music", "Movies"]
          minItems: 1
          maxItems: 2
          description: "How does user thinks would learn better and faster."
          example: ["Text", "Music",]
        timeRange:
          type: object
          properties:
            min:
              type: integer
            max:
              type: integer
          required:
            - min
            - max
          description: How much time (in minutes) does user want to spend.
      required:
        - id
        - email
        - username

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message

    AuthCallbackRequest:
      type: object
      properties:
        code:
          type: string
          description: Authorization code from provider
        state:
          type: string
          description: State parameter for CSRF protection
      required:
        - code

paths:
  /auth/google:
    get:
      summary: Initiate Google OAuth 2.0 Login
      description: Redirects to Google OAuth 2.0 authentication
      tags:
        - OAuth 2
      responses:
        '302':
          description: Redirects to Google authorization URL

  /auth/google/callback:
    post:
      summary: Google OAuth 2.0 Callback
      description: Handles Google OAuth 2.0 callback with authorization code
      tags:
        - OAuth 2
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthCallbackRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/apple:
    get:
      summary: Initiate Apple OAuth 2.0 Login
      description: Redirects to Apple OAuth 2.0 authentication
      tags:
        - OAuth 2
      responses:
        '302':
          description: Redirects to Apple authorization URL

  /auth/apple/callback:
    post:
      summary: Apple OAuth 2.0 Callback
      description: Handles Apple OAuth 2.0 callback with authorization code
      tags:
        - OAuth 2
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthCallbackRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user:
    post:
      summary: Register a new user
      description: Registers a new user with a username (required). Requires an access token in the header.
      operationId: registerUser
      tags:
        - User
      security:
        - GoogleOAuth: []
        - AppleOAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  example: johndoe
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "123456"
                  username:
                    type: string
                    example: johndoe
        '400':
          description: Invalid request
        '401':
          description: Unauthorized - Invalid access token
    put:
      summary: Update user profile
      description: Updates user's name and avatar
      tags:
        - User
      security:
        - GoogleOAuth: []
        - AppleOAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: New username
                avatar:
                  type: string
                  format: binary
                  description: New avatar image file
                nativeLanguage:
                  $ref: '#/components/schemas/User/properties/nativeLanguage'
                ageRange:
                  $ref: '#/components/schemas/User/properties/ageRange'
                declaredLevel:
                  $ref: '#/components/schemas/User/properties/declaredLevel'
                testedLevel:
                  $ref: '#/components/schemas/User/properties/testedLevel'
                target:
                  $ref: '#/components/schemas/User/properties/target'
                motivations:
                  $ref: '#/components/schemas/User/properties/motivations'
                learningStyle:
                  $ref: '#/components/schemas/User/properties/learningStyle'
                timeRange:
                  $ref: '#/components/schemas/User/properties/timeRange'
      responses:
        '200':
          description: Successfully updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

security:
  - GoogleOAuth: []
  - AppleOAuth: []
